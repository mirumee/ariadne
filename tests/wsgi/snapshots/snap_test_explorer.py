# -*- coding: utf-8 -*-
# snapshottest: v1 - https://goo.gl/zC4yUc
from __future__ import unicode_literals

from snapshottest import Snapshot


snapshots = Snapshot()

snapshots['test_405_bad_method_is_served_on_get_request_for_disabled_explorer 1'] = [
]

snapshots['test_apollo_html_is_served_on_get_request 1'] = [
    b'<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset="utf-8" />\n    <meta name="viewport" content="user-scalable=no, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, minimal-ui">\n    <title>Ariadne GraphQL</title>\n    <style>\n      html, body {\n        height: 100%;\n        margin: 0;\n        width: 100%;\n        overflow: hidden;\n      }\n    </style>\n  </head>\n  <body>\n    <div style="width: 100%; height: 100%;" id=\'embedded-sandbox\'></div>\n    <script src="https://embeddable-sandbox.cdn.apollographql.com/_latest/embeddable-sandbox.umd.production.min.js"></script> \n    <script>\n      new window.EmbeddedSandbox({\n        target: \'#embedded-sandbox\',\n        initialEndpoint: window.location.href,\n        initialState: {\n          document: \'# Write your query or mutation here\',\n          variables: {},\n          headers: {},\n        },\n        includeCookies: false,\n      });\n    </script>\n  </body>\n</html>\n'
]

snapshots['test_default_explorer_html_is_served_on_get_request 1'] = [
    b'<!--\n *  Copyright (c) 2021 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the license found in the\n *  LICENSE file in the root directory of this source tree.\n-->\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset="utf-8" />\n    <meta name="viewport" content="user-scalable=no, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, minimal-ui">\n    <title>Ariadne GraphQL</title>\n    <style>\n      body {\n        height: 100%;\n        margin: 0;\n        width: 100%;\n        overflow: hidden;\n      }\n\n      #graphiql {\n        height: 100vh;\n      }\n\n      #graphiql-loading {\n        height: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n\n        color: #545454;\n        font-size: 1.5em;\n        font-family: sans-serif;\n        font-weight: bold;\n      }\n    </style>\n    <link rel="stylesheet" href="https://unpkg.com/graphiql/graphiql.min.css" />\n    \n  </head>\n\n  <body>\n    <div id="graphiql">\n      <div id="graphiql-loading">Loading Ariadne GraphQL...</div>\n    </div>\n\n    <script\n      crossorigin\n      src="https://unpkg.com/react@17/umd/react.development.js"\n    ></script>\n    <script\n      crossorigin\n      src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"\n    ></script>\n\n    <script\n      crossorigin\n      src="https://unpkg.com/graphiql/graphiql.min.js"\n    ></script>\n\n    \n\n    <script>\n      var fetcher = GraphiQL.createFetcher({\n        url: window.location.href,\n      });\n\n      function AriadneGraphiQL() {\n        var [query, setQuery] = React.useState(\n          \'#\\n# GraphiQL is an in -browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a "{" character. Lines that start\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: "value") {\\n#         subField\\n#\\n#       }\\n#\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#   Prettify query: Shift - Ctrl - P(or press the prettify button)\\n#\\n#  Merge fragments: Shift - Ctrl - M(or press the merge button)\\n#\\n#        Run Query: Ctrl - Enter(or press the play button)\\n#\\n#    Auto Complete: Ctrl - Space(or just start typing)\\n#\',\n        );\n        \n        return React.createElement(GraphiQL, {\n          fetcher: fetcher,\n          defaultEditorToolsVisibility: true,\n          \n          query: query,\n          onEditQuery: setQuery,\n        });\n      }\n\n      ReactDOM.render(\n        React.createElement(AriadneGraphiQL),\n        document.getElementById(\'graphiql\'),\n      );\n    </script>\n  </body>\n</html>\n'
]

snapshots['test_graphiql_html_is_served_on_get_request 1'] = [
    b'<!--\n *  Copyright (c) 2021 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the license found in the\n *  LICENSE file in the root directory of this source tree.\n-->\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset="utf-8" />\n    <meta name="viewport" content="user-scalable=no, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, minimal-ui">\n    <title>Ariadne GraphQL</title>\n    <style>\n      body {\n        height: 100%;\n        margin: 0;\n        width: 100%;\n        overflow: hidden;\n      }\n\n      #graphiql {\n        height: 100vh;\n      }\n\n      #graphiql-loading {\n        height: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n\n        color: #545454;\n        font-size: 1.5em;\n        font-family: sans-serif;\n        font-weight: bold;\n      }\n    </style>\n    <link rel="stylesheet" href="https://unpkg.com/graphiql/graphiql.min.css" />\n    \n  </head>\n\n  <body>\n    <div id="graphiql">\n      <div id="graphiql-loading">Loading Ariadne GraphQL...</div>\n    </div>\n\n    <script\n      crossorigin\n      src="https://unpkg.com/react@17/umd/react.development.js"\n    ></script>\n    <script\n      crossorigin\n      src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"\n    ></script>\n\n    <script\n      crossorigin\n      src="https://unpkg.com/graphiql/graphiql.min.js"\n    ></script>\n\n    \n\n    <script>\n      var fetcher = GraphiQL.createFetcher({\n        url: window.location.href,\n      });\n\n      function AriadneGraphiQL() {\n        var [query, setQuery] = React.useState(\n          \'#\\n# GraphiQL is an in -browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a "{" character. Lines that start\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: "value") {\\n#         subField\\n#\\n#       }\\n#\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#   Prettify query: Shift - Ctrl - P(or press the prettify button)\\n#\\n#  Merge fragments: Shift - Ctrl - M(or press the merge button)\\n#\\n#        Run Query: Ctrl - Enter(or press the play button)\\n#\\n#    Auto Complete: Ctrl - Space(or just start typing)\\n#\',\n        );\n        \n        return React.createElement(GraphiQL, {\n          fetcher: fetcher,\n          defaultEditorToolsVisibility: true,\n          \n          query: query,\n          onEditQuery: setQuery,\n        });\n      }\n\n      ReactDOM.render(\n        React.createElement(AriadneGraphiQL),\n        document.getElementById(\'graphiql\'),\n      );\n    </script>\n  </body>\n</html>\n'
]

snapshots['test_playground_html_is_served_on_get_request 1'] = [
    b'<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset="utf-8" />\n    <meta name="viewport" content="user-scalable=no, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, minimal-ui">\n    <title>Ariadne GraphQL</title>\n    <link rel="stylesheet" href="//cdn.jsdelivr.net/npm/graphql-playground-react/build/static/css/index.css" />\n    <link rel="shortcut icon" href="//cdn.jsdelivr.net/npm/graphql-playground-react/build/favicon.png" />\n    <script src="//cdn.jsdelivr.net/npm/graphql-playground-react/build/static/js/middleware.js"></script>\n  </head>\n  <body>\n    <div id="root">\n      <style>\n        body {\n          background-color: rgb(23, 42, 58);\n          font-family: Open Sans, sans-serif;\n          height: 90vh;\n        }\n\n        #root {\n          height: 100%;\n          width: 100%;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n        }\n\n        .loading {\n          font-size: 32px;\n          font-weight: 200;\n          color: rgba(255, 255, 255, .6);\n          margin-left: 20px;\n        }\n\n        img {\n          width: 78px;\n          height: 78px;\n        }\n\n        .title {\n          font-weight: 400;\n        }\n      </style>\n      <img src=\'//cdn.jsdelivr.net/npm/graphql-playground-react/build/logo.png\' alt=\'\'>\n      <div class="loading"> Loading\n        <span class="title">Ariadne GraphQL</span>\n      </div>\n    </div>\n    <script>\n      window.addEventListener(\'load\', function (event) {\n        GraphQLPlayground.init(document.getElementById(\'root\'), {\n          // options as \'endpoint\' belong here\n          \n        })\n      })\n    </script>\n  </body>\n</html>\n'
]
